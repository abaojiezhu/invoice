package com.ztessc.einvoice.controller.app;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.ztessc.einvoice.controller.BaseController;
import com.ztessc.einvoice.exception.BizException;
import com.ztessc.einvoice.service.InvoiceService;
import com.ztessc.einvoice.util.Const;
import com.ztessc.einvoice.util.FileUpload;
import com.ztessc.einvoice.util.FileUtil;
import com.ztessc.einvoice.util.MessageUtil;
import com.ztessc.einvoice.util.PageData;
import com.ztessc.einvoice.util.ShiroUtil;
import com.ztessc.einvoice.util.UuidUtil;

@RequestMapping(value = "/app/invoice")
@RestController
public class InvoiceAppController extends BaseController {

	@Autowired
	private InvoiceService invoiceService;
	
	/**
	 * <pre>
	 * 二维码发票解析
	 * 01,10,044001500111,91398776,415.57,20180111,14676717298231023492,21F8
	 * 总共8个数据
	 * 1:暂不清楚
	 * 2:发票种类代码: 
	 * 		01-增值税专用发票
	 * 		02-货物运输业增值税专用发票
	 * 		03-机动车销售统一发票
	 * 		04-增值税普通发票
	 * 		10-增值税电子发票
	 * 		11-卷式普通发票
	 * 		14-电子普通[通行费]发票
	 * 		20-国税
	 * 		30-地税
	 * 3:发票代码
	 * 4:发票号码
	 * 5:不含税金额
	 * 6:开票日期
	 * 7:校验码
	 * 8:随机产生的机密信息
	 * </pre>
	 */
	public PageData parse(String content) {
		String[] split = content.split(",");
		PageData data = new PageData();
		data.put("invoiceTypeCode", split[1]);
		data.put("billingNo", split[2]);
		data.put("billingCode", split[3]);
		data.put("feeWithoutTax", split[4]);
		//日期格式转换为yyyy-MM-dd
		String billingTime = split[5];
		if(billingTime.length() == 8) {
			billingTime = billingTime.substring(0, 4) + "-" + billingTime.substring(4, 6) + "-" + billingTime.substring(6, 8);
		}
		data.put("billingTime", billingTime);
		//校验码保存后6位
		data.put("checkCode", split[6].substring(split[6].length() - 6));
		return data;
	}
	
	/**
	 * 手工扫描
	 * @author: 徐益森
	 * @date: 2018年5月3日 下午2:36:30
	 * @param {"content":"01,10,044001500111,91398776,415.57,20180111,14676717298231023492,21F8"}
	 * @return PageData
	 */
	@RequestMapping(value = "/scan", method = RequestMethod.POST)
	public PageData scan() {
		PageData params = this.getPageData();
		PageData invoice = this.parse(params.getString("content"));
		invoice.put("invoiceSource", Const.DIC_INVOICE_SOURCE_TYPE_HAND);
		invoiceService.save(invoice);
		return MessageUtil.getSuccessMessage(invoice);
	}
	
	/**
	 * 首页---手工录入发票
	 * @author: 徐益森
	 * @date: 2018年4月19日 上午11:15:15
	 * @param {"billingNo":"044001500111","billingCode":"91398776","checkCode":"14676717298231023492","billingTime":"2018-01-11","feeWithoutTax":"415.57"}
	 * @return PageData
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public PageData save() {
		PageData params = this.getPageData();
		params.put("invoiceSource", Const.DIC_INVOICE_SOURCE_TYPE_HAND);
		invoiceService.save(params);
		return MessageUtil.getSuccessMessage(params);
	}
	
	/**
	 * 首页---PDF发票上传
	 * @author: 徐益森
	 * @date: 2018年4月19日 上午11:20:31
	 * @param {"content":"01,10,044001500111,91398776,415.57,20180111,14676717298231023492,21F8"}
	 * @return PageData
	 */
	@RequestMapping(value = "/uploadPDF", method = RequestMethod.POST)
	public PageData uploadPDF(MultipartHttpServletRequest multipartHttpServletRequest) {
		String[] contents = multipartHttpServletRequest.getParameterValues("content");
		List<MultipartFile> files = multipartHttpServletRequest.getFiles("file");
		
		if(contents == null || contents.length == 0 || files == null || files.size() == 0) {
			throw new BizException("请选择要上传的pdf文件");
		}
		
		if(contents.length != files.size()) {
			throw new BizException("参数错误");
		}
		List<PageData> list = new ArrayList<PageData>();
		for (int i=0; i<contents.length; i++) {
			PageData invoice = this.parse(contents[i]);
			String fileName =  FileUpload.fileUp(files.get(i), FileUtil.getUploadPath(Const.FILE_UPLOAD_DIR.get("1006")), UuidUtil.getUUID());
			invoice.put("fileName", fileName);
			invoice.put("realName", files.get(i).getOriginalFilename());
			list.add(invoice);
		}
		
		PageData result = invoiceService.saveBatch(list);
		return MessageUtil.getSuccessMessage(result);
	}

	/**
	 * 发票---发票查询
	 * @author: 徐益森
	 * @date: 2018年4月19日 上午11:33:02
	 * @param {"invoiceSource":"Z003001","billingTime":"2018-04-19","pageNum":"1","pageSize":"10","keyword":"","sort":""}
	 * @return PageData
	 */
	@RequestMapping(value = "/list", method = RequestMethod.POST)
	public PageData list() {
		PageData params = this.getPageData();
		params.put("userId", ShiroUtil.getCurrentUserId());
		Page<Object> page = PageHelper.startPage(Integer.parseInt(params.getString("pageNum")), Integer.parseInt(params.getString("pageSize")));
		params.transEmptyToNull();
		List<PageData> list = invoiceService.listInvoice(params);
		params.put("list", list);
		return MessageUtil.getSuccessMessage(this.getPageResult(page, list));
	}
	
	/**
	 * 发票---发票查询--发票详情--发送给同事
	 * @author: 徐益森
	 * @date: 2018年4月26日 下午2:35:50
	 * @param {"invoiceId":"aaa","userId":"bbb"}
	 * @return PageData
	 */
	@RequestMapping(value = "/sendInvoiceToUser", method = RequestMethod.POST)
	public PageData sendInvoiceToUser() {
		PageData params = this.getPageData();
		invoiceService.sendInvoiceToUser(params);
		return MessageUtil.getSuccessMessage(params);
	}
	
	
	/**
	 * 物理删除发票信息
	 * @author: TQM
	 * @date: 2018年5月2日11:01:52
	 * @param {"id":"aaa"}
	 */
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public PageData delete() {
		PageData params = this.getPageData();
		invoiceService.delete(params);
		return MessageUtil.getSuccessMessage(Const.MESSAGE_SUCCESS_DELETE);
	}
	
}
