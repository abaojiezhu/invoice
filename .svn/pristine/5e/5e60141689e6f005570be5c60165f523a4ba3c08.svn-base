package com.ztessc.einvoice.controller;

import org.apache.shiro.authc.UsernamePasswordToken;
import org.slf4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.ztessc.einvoice.service.SysRoleService;
import com.ztessc.einvoice.service.UserService;
import com.ztessc.einvoice.util.Const;
import com.ztessc.einvoice.util.Log;
import com.ztessc.einvoice.util.MessageUtil;
import com.ztessc.einvoice.util.PageData;
import com.ztessc.einvoice.util.ShiroUtil;

@RestController
public class LoginController extends BaseController {

	private final Logger log = Log.get();
	
	@Autowired
	private SysRoleService sysRoleService;
	@Autowired
	private UserService userService;
	
	/**
     * 登录方法
     * @param {"username":"admin","password":"888888"}
     * @return
     */
    @RequestMapping(value = "/init/login")
    @ResponseBody
    public PageData login() {
    	PageData params = this.getPageData();
    	//params.put("username", "admin");
    	//params.put("password", "888888");
System.out.println("login---params---" + params);		
        UsernamePasswordToken token = new UsernamePasswordToken(params.getString("username"), params.getString("password"));

        PageData result = new PageData();
        try {
            ShiroUtil.login(token);
            result.put("token", ShiroUtil.getSessionId());
            result = MessageUtil.getSuccessMessage(result, "登录成功");
        } catch (Exception e) {
        	result = MessageUtil.getErrorMessage(result, "用户名或密码错误", Const.ERROR_CODE_USERNAME_PASSWORD_ERROR);
        	log.error("登录失败", e);
        }
        return result;
    }
	
    /**
	 * 用户注销
	 */
	@RequestMapping(value = "/init/logout")
	public PageData logout() {
		ShiroUtil.logout();
		return MessageUtil.getSuccessMessage("注销成功");
	}
	
	
	@RequestMapping(value = "/init/unlogin")
    @ResponseBody
    public PageData unlogin() {
        return MessageUtil.getErrorMessage("未登录或登录失效,请重新登录！",Const.ERROR_CODE_UNLOGIN);
    }
	
	/**
     * 未登录，shiro应重定向到登录界面，此处返回未登录状态信息由前端控制跳转页面
     */
    @RequestMapping(value = "/init/unauth")
    @ResponseBody
    public PageData unauth() {
        return MessageUtil.getErrorMessage("没权限",Const.ERROR_CODE_UNAUTH);
    }
}
